on:
  push:
    branches: [ 'master' ]
name: ðŸš€ Deploy website on push
jobs:
  backend:
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'release'
    name: Backend go
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.18]
        node-version: ['17.x']
    steps:
      - name: Check out branch
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Build-Node
        run: |
          cd front/ && yarn install && yarn run build

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Download dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
        working-directory: ./

      - name: Test and Build
        run: |
          go build -v -race
          ls -l
        working-directory: ./greet

      - name: restart
        env:
          KEY: ${{ secrets.KEY }}
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          PROT: ${{ secrets.PROT }}
          MKDIRTEST: ${{ secrets.MKDIRTEST }}
        run: |
          mkdir -p ~/.ssh/ && echo "$KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          scp -P ${PROT} -o StrictHostKeyChecking=no -r greet/greet ${USER}@${HOST}:${MKDIRTEST}dist/
          scp -P ${PROT} -o StrictHostKeyChecking=no -r front/dist/* ${USER}@${HOST}:${FRONTDIR}
          ssh -p ${PROT} -o StrictHostKeyChecking=no ${USER}@${HOST} "cd ${MKDIRTEST}dist/ && bash restart.sh > /dev/null  2>&1 &"