info(
	title: "接口定义"
	author: "linqr"
	date: "2022-11-1"
	desc: "接口主描述文件"
	version: "1.0"
)

type Request {
	Name string `json:"name"`
}

type Response {
	Message      string `json:"message"`
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

service greet-api {
	@handler GreetHandler
	get /from (Request) returns (Response);
}

type (
	HouseReq {
		Area  string `form:"area"`
		Limit int64  `form:"limit,default=30"`
		Group string `form:"group,default=day"`
	}
	HouseReply {
		XData         []string     `json:"xData"`
		YData         []int64      `json:"yData"`
		AreaRange     []AreaRange  `json:"areaRange"`
		AreaRangeData []string     `json:"areaRangeData"`
		LimitRange    []LimitRange `json:"limitRange"`
		GroupData     []GroupData  `json:"groupData"`
		SeriesData    []SeriesData `json:"seriesData"`
	}
	AreaRange {
		Value string `json:"value"`
		Label string `json:"label"`
	}
	LimitRange {
		Value int64 `json:"value"`
		Label int64 `json:"label"`
	}
	GroupData {
		Value string `json:"value"`
		Label string `json:"label"`
	}
	SeriesData {
		Name string  `json:"name"`
		Data []int64 `json:"data"`
		Type string  `json:"type"`
	}

	CatchHouseReq {
		Date string `form:"date"`
	}

	CatchHouseRes {
	}
)

// @server(
// 	jwt: Auth
// 	middleware: Example // 路由中间件声明
// )

@server(
	prefix: /house
	// middleware: CheckUser
	group: house
)

service greet-api {
	@handler house
	get /get (HouseReq) returns (HouseReply);
	
	@handler catchHouse
	get /catchHouse (CatchHouseReq) returns (CatchHouseRes);
}